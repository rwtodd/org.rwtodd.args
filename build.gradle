/*
 * User Manual available at https://docs.gradle.org/6.6.1/userguide/java_library_plugin.html
 */
plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'jvm-test-suite'

    // upload to Maven
    id 'maven-publish'
    id 'signing'
}

version = '2.0.1'
group = 'org.rwtodd'

compileJava {
    options.release = 17
}

repositories {
    mavenCentral()
}

testing {
  suites {
    test {
        useJUnitJupiter()
    }
  }
}

java { 
  withJavadocJar()
  withSourcesJar()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'org.rwtodd.args'
            from components.java
            pom {
                name = 'org.rwtodd.args'
                description = 'A commandline-parsing library'
                url = 'https://github.com/rwtodd/org.rwtodd.args'
                //properties = [ ]
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'rwtodd'
                        name = 'Richard Todd'
                        email = 'rwtodd@users.noreply.github.com'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/rwtodd/org.rwtodd.args.git'
                    developerConnection = 'scm:git:https://github.com/rwtodd/org.rwtodd.args.git'
                    url = 'https://github.com/rwtodd/org.rwtodd.args'
                }
            }
        }
    }
    repositories {
        maven {
            url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
              username ossrhUsername
              password ossrhPassword
            }
            // change URLs to point to your repos, e.g. http://my.org/repo
            //def releasesRepoUrl = layout.buildDirectory.dir('repos/releases')
            //def snapshotsRepoUrl = layout.buildDirectory.dir('repos/snapshots')
            //url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

signing {
    sign publishing.publications.mavenJava //configurations.archives
}

javadoc {
  if(JavaVersion.current().isJava9Compatible()) {
    options.addBooleanOption('html5',true)
  }
}
